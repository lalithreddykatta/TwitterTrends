#BlueJ class context
comment0.params=name\ comp
comment0.target=void\ addLayoutComponent(java.lang.String,\ java.awt.Component)
comment0.text=\ Adds\ the\ specified\ component\ with\ the\ specified\ name\ to\r\n\ the\ layout.\r\n\ @param\ name\ the\ component\ name\r\n\ @param\ comp\ the\ component\ to\ be\ added\r\n
comment1.params=comp
comment1.target=void\ removeLayoutComponent(java.awt.Component)
comment1.text=\ Removes\ the\ specified\ component\ from\ the\ layout.\r\n\ @param\ comp\ the\ component\ to\ be\ removed\r\n
comment2.params=parent
comment2.target=java.awt.Dimension\ preferredLayoutSize(java.awt.Container)
comment2.text=\ Calculates\ the\ preferred\ dimension\ for\ the\ specified\r\n\ panel\ given\ the\ components\ in\ the\ specified\ parent\ container.\r\n\ @param\ parent\ the\ component\ to\ be\ laid\ out\r\n\r\n\ @see\ \#minimumLayoutSize\r\n
comment3.params=parent
comment3.target=java.awt.Dimension\ minimumLayoutSize(java.awt.Container)
comment3.text=\ Calculates\ the\ minimum\ dimension\ for\ the\ specified\r\n\ panel\ given\ the\ components\ in\ the\ specified\ parent\ container.\r\n\ @param\ parent\ the\ component\ to\ be\ laid\ out\r\n\ @see\ \#preferredLayoutSize\r\n
comment4.params=parent
comment4.target=void\ layoutContainer(java.awt.Container)
comment4.text=\ Lays\ out\ the\ container\ in\ the\ specified\ panel.\r\n\ @param\ parent\ the\ component\ which\ needs\ to\ be\ laid\ out\r\n
comment5.params=comp\ constr
comment5.target=void\ addLayoutComponent(java.awt.Component,\ java.lang.Object)
comment5.text=\ Adds\ the\ specified\ component\ to\ the\ layout,\ using\ the\ specified\r\n\ constraint\ object.\r\n\ @param\ comp\ the\ component\ to\ be\ added\r\n\ @param\ constr\ \ where/how\ the\ component\ is\ added\ to\ the\ layout.\r\n
comment6.params=target
comment6.target=java.awt.Dimension\ maximumLayoutSize(java.awt.Container)
comment6.text=\ Returns\ the\ maximum\ size\ of\ this\ component.\r\n\ @see\ java.awt.Component\#getMinimumSize()\r\n\ @see\ java.awt.Component\#getPreferredSize()\r\n\ @see\ LayoutManager\r\n
comment7.params=target
comment7.target=float\ getLayoutAlignmentX(java.awt.Container)
comment7.text=\ Returns\ the\ alignment\ along\ the\ x\ axis.\ \ This\ specifies\ how\r\n\ the\ component\ would\ like\ to\ be\ aligned\ relative\ to\ other\r\n\ components.\ \ The\ value\ should\ be\ a\ number\ between\ 0\ and\ 1\r\n\ where\ 0\ represents\ alignment\ along\ the\ origin,\ 1\ is\ aligned\r\n\ the\ furthest\ away\ from\ the\ origin,\ 0.5\ is\ centered,\ etc.\r\n
comment8.params=target
comment8.target=float\ getLayoutAlignmentY(java.awt.Container)
comment8.text=\ Returns\ the\ alignment\ along\ the\ y\ axis.\ \ This\ specifies\ how\r\n\ the\ component\ would\ like\ to\ be\ aligned\ relative\ to\ other\r\n\ components.\ \ The\ value\ should\ be\ a\ number\ between\ 0\ and\ 1\r\n\ where\ 0\ represents\ alignment\ along\ the\ origin,\ 1\ is\ aligned\r\n\ the\ furthest\ away\ from\ the\ origin,\ 0.5\ is\ centered,\ etc.\r\n
comment9.params=target
comment9.target=void\ invalidateLayout(java.awt.Container)
comment9.text=\ Invalidates\ the\ layout,\ indicating\ that\ if\ the\ layout\ manager\r\n\ has\ cached\ information\ it\ should\ be\ discarded.\r\n
numComments=10
